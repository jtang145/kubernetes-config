# This is not needed on AKS
#apiVersion: storage.k8s.io/v1
#kind: StorageClass
#metadata:
#  name: managed-premium
#provisioner: kubernetes.io/azure-disk
#reclaimPolicy: Retain
#volumeBindingMode: WaitForFirstConsumer
#parameters:
#  cachingmode: ReadOnly
#  kind: Managed
#  resourceGroup: rg-apm-jtang
#  storageaccounttype: Premium_LRS
#---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-sql-system
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mssql
type: Opaque
data:
  SA_PASSWORD: UzBtZXRoaW5nU0BTdHIwbmch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mssql
    spec:
      securityContext:
        fsGroup: 10001
      containers:
        - name: mssql
          image: 'mcr.microsoft.com/mssql/server:2019-CU4-ubuntu-18.04'
          ports:
            - containerPort: 1433
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql
                  key: SA_PASSWORD
          volumeMounts:
            - name: mssql-system
              mountPath: /var/opt/mssql
      volumes:
        - name: mssql-system
          persistentVolumeClaim:
            claimName: pvc-sql-system
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-deployment
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 31433
      targetPort: 1433
  type: LoadBalancer


# Reference:
#  https://arunksingh16.medium.com/kubernetes-storage-dynamic-provisioning-70e0fe6f6dc6